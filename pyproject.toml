[project]
name = "ssh-master"
version = "0.0.0"
description = ""
authors = [
    {name = "whatislove118",email = "pochikalin@gmail.com"},
]
dependencies = [
    "pyqt6>=6.5.2",
    "pyqt-tools>=1.0.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}



[tool.pdm]
version = { source = "file", path = "src/__about__.py" }
[tool.pdm.dev-dependencies]
dev = [
    "commitizen>=3.10.0",
    "tox-pdm>=0.7.0",
    "pre-commit>=3.4.0",
    "pdm-vscode>=0.1.1",
    "ipython>=8.16.1",
]


[tool.pdm.scripts]
add = "git add ."
lint = "pre-commit run -a"
test = "pytest tests"
load = "pdm install -G:all"
load_lock = "pdm lock -G:all"



[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

[tool.black]
line-length = 120
include = '\.pyi?$'
target-version = ['py311']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
  )
)
'''

[tool.isort]
known_first_party = "src"
line_length = 120
profile = "black"
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.pycln]
all = true

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
no_site_packages = true
strict_optional = false
strict = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
disable_error_code = ["valid-type", "call-arg"]
allow_untyped_defs = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: unreachable",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
include = [
    "src/*"
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
version_files = [
    "src/__about__.py",
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]



[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
